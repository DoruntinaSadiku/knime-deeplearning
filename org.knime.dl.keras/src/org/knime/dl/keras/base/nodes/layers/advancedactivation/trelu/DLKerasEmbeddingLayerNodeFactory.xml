<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE knimeNode PUBLIC "-//UNIKN//DTD KNIME Node 2.0//EN" "http://www.knime.org/Node.dtd">
<knimeNode icon="dlkerasembeddinglayer.png" type="Other">
	<name>Keras Embedding Layer</name>

	<shortDescription>
		An embedding network layer.
	</shortDescription>

	<fullDescription>
		<intro>
			An embedding network layer. Corresponds to the
			<a href="https://keras.io/layers/embeddings/">Embedding Keras layer</a>.
			This layer receives a sequence of integer indices and learns to embed those into
			a high dimensional vector (the size of which is specified by output dimension).
			This layer can only be used as the first layer in a model.
		</intro>
		<option name="Input dimension">
			Size of vocabulary, i.e. maximum integer index + 1.
		</option>
		<option name="Output dimension">
			Dimension of the dense embedding.
		</option>
		<option name="Initializer">
			The initializer for the embedding matrix.
		</option>
		<option name="Embedding Regularizer">
			An optional regularizer for the embedding matrix.
		</option>
		<option name="Constraint">
			An optional constraint for the embedding matrix.
		</option>
		<option name="Mask zero">
			Whether or not the input value 0 is a special "padding" value that should be masked out
			This is useful when using recurrent layers which may take variable length input.
			If this is selected then all subsequent layers in the model need to support masking or an exception will be raised during execution.
			If mask_zero is set to True, as a consequence, index 0 cannot be used in the vocabulary
			(input dimension should equal size of vocabulary + 1).
		</option>
		<option name="Input length">
			The optional length of the input sequences, when it is constant.
			This argument is required if you want to use dense layers after a flatten in subsequent parts of the network.
		</option>
	</fullDescription>
	<ports>
		<inPort index="0" name="Deep Learning Network">
			The Keras deep learning network to which to add a
			<tt>Embedding</tt>
			layer.
		</inPort>
		<outPort index="0" name="Deep Learning Network">
			The Keras deep learning network with an added
			<tt>Embedding</tt>
			layer.
		</outPort>
	</ports>
</knimeNode>
