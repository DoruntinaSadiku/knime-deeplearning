<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE knimeNode PUBLIC "-//UNIKN//DTD KNIME Node 2.0//EN" "http://www.knime.org/Node.dtd">
<knimeNode icon="./dlpythonexecutor.png" type="Predictor">
	<name>DL Python Network Executor</name>

	<shortDescription>
		Allows custom execution of (Python compatible)
		deep learning networks in a local Python installation.
	</shortDescription>

	<fullDescription>
		<intro>
			This node allows custom execution of (Python compatible)
			deep learning networks in a local Python installation via a user-defined script.
			The path to the Python executable has to be configured
			in Preferences
			→ KNIME → Python.
		</intro>
		<tab name="Script">
			<option name="Editor">
				The script that will be executed to generate this node's output.
				"Execute script" will execute the full script while "Execute selected lines"
				will only execute the currently selected part of the script.
				<br />
				<br />
				The editor optionally provides autocompletion (CTRL + Space) if the
				Python module <b>jedi</b> is installed.
			</option>
			<option name="Columns">
				Lists the available columns of the
				input table. A double click will insert the corresponding identifier
				at the current cursor position in the editor.
			</option>
			<option name="Flow variables">
				Lists the available flow variables. A
				double click will insert the corresponding identifier at the current
				cursor position in the editor.
			</option>
			<option name="Workspace">
				Lists the currently defined identifiers in the
				running Python instance. "Reset workspace" will remove all definitions
				and reinsert only the input data.
			</option>
			<option name="Console">
				Displays the standard and error output of the
				execution as well as other relevant information.
			</option>
		</tab>
		<tab name="Options">
			<option name="Row limit (dialog)">
				Limits how many rows are loaded in the dialog.
				Changes only take effect after reseting the workspace.
			</option>
		</tab>
		<tab name="Options">
			<option name="Row limit (dialog)">
				Limits how many rows are loaded in the dialog. Changes only take effect
				after reseting the workspace.
			</option>
			<option name="Use python version">
				Allows to choose the python version that should be used for executing the
				kernel. Available installations can be checked under Preferences →
				KNIME → Python.
			</option>
			<option name="Missing values (Int, Long)">
				Per default, Int and Long columns containing missing values are
				converted to double in python, because its the only numeric type
				containing a builtin missing value type (NaN). The conversion may be
				avoided by selecting "convert missing values to sentinel value (to
				python)". In that case every missing value is replaced by the
				specified sentinel value. For the sentinel value 3 options exist.
				MIN_VAL represents the smallest possible value for a cloumn's datatype
				and MAX_VAL the correspondent largest possible value. Using the text field
				option an arbitrary sentinel value in Integer-range may be chosen. On the
				way back from python to java the sentinel values may either be replaced by
				missing values or left in place which is controlled through the "convert
				sentinel values to missing value (from python)" option.
			</option>
		</tab>
	</fullDescription>

	<ports>
		<inPort name="Deep Learning Network" index="0">
			The trained deep learning network. In the Python script,
			it is available under the name of <b>input_network</b>.
		</inPort>
		<inPort name="Data Table" index="1">
			The input table. In the Python script, it is available as
			pandas.DataFrame under the name of <b>input_table</b>.
		</inPort>
		<outPort name="Data Table" index="0">
			The output table. This is the content of the variable
			<b>output_table</b> which has to be defined and has to be of
			type pandas.DataFrame for this node to successfully execute.
		</outPort>
	</ports>
	<views>
		<view name="Standard output" index="0">
			The text sent by Python to the
			standard output during the execution of
			this node.
		</view>
		<view name="Error output" index="1">
			The text sent by Python to the
			error output during the execution of
			this node.
		</view>
	</views>
</knimeNode>
